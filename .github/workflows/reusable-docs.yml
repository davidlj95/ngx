name: Docs
on:
  workflow_call:
    inputs:
      ref:
        description: Git reference to checkout. Defaults to @actions/checkout default.
        type: string
        required: false
        default: ''
      api-docs-artifact-name:
        description: Artifact name containing API reference markdown docs
        type: string
        required: false
      bundle-size-artifact-name-prefix:
        description: Artifact name prefix containing bundle size info
        type: string
        required: false
    secrets:
      cloudflare-account-id:
        required: true
      cloudflare-api-token:
        required: true

env:
  DOCS_DIR: projects/ngx-meta/docs

permissions:
  deployments: write

jobs:
  docs:
    name: Docs build & deploy
    defaults:
      run:
        working-directory: '${{ env.DOCS_DIR }}'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: |
      github.ref_name == 'main' ||
      (
        github.event_name == 'pull_request' &&
        contains(github.event.pull_request.labels.*.name, 'preview docs')
      )
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          ref: ${{ inputs.ref }}
      - name: Download API reference docs
        if: ${{ inputs.api-docs-artifact-name != '' }}
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4
        with:
          name: ${{ inputs.api-docs-artifact-name }}
          path: 'projects/ngx-meta/docs/content/api'
      - name: Download bundle size info
        if: ${{ inputs.bundle-size-artifact-name-prefix != '' }}
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4
        with:
          pattern: ${{ inputs.bundle-size-artifact-name-prefix }}*
      - name: Copy reports into directories
        if: ${{ inputs.bundle-size-artifact-name-prefix != '' }}
        working-directory: '.'
        run: |
          for artifact_dir in ${{ inputs.bundle-size-artifact-name-prefix }}*; do
            version="$(echo "$artifact_dir" | sed "s/^${{ inputs.bundle-size-artifact-name-prefix }}//")"
            bundle_size_app_dir="projects/ngx-meta/bundle-size/a$version"
            mkdir -p "$bundle_size_app_dir"
            cp "$artifact_dir/bundle-size-report.md" "$bundle_size_app_dir"
          done
      - name: Install poetry # pipx comes built-in in GitHub runner
        run: pipx install poetry
      - name: Setup Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5
        with:
          python-version-file: '${{ env.DOCS_DIR }}/pyproject.toml'
          cache: 'poetry'
          cache-dependency-path: '${{ env.DOCS_DIR }}/poetry.lock'
      - name: Setup pnpm
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          cache: 'pnpm'
          cache-dependency-path: '${{ env.DOCS_DIR }}/pnpm-lock.yaml'
          node-version-file: '.node-version'
      - name: Install deps
        run: make install
      - name: Generate cache id for Mkdocs build
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - name: Cache Mkdocs build
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: '${{ env.DOCS_DIR }}/.cache'
          restore-keys: |
            mkdocs-material-
      - name: Build
        run: make build
      - name: Publish
        uses: cloudflare/pages-action@f0a1cd58cd66095dee69bfa18fa5efd1dde93bca # 1
        with:
          accountId: ${{ secrets.cloudflare-account-id }}
          apiToken: ${{ secrets.cloudflare-api-token }}
          # Somehow if this is not set, it deploys to production when building on a PR
          # https://github.com/cloudflare/pages-action/issues/97
          branch: ${{ github.head_ref || github.ref_name }}
          projectName: 'ngx-meta'
          directory: 'site'
          workingDirectory: '${{ env.DOCS_DIR }}'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
