name: Docs
on:
  workflow_call:
    inputs:
      ref:
        description: Git reference to checkout. Defaults to @actions/checkout default.
        type: string
        required: false
        default: ''
      api-docs-artifact-name:
        description: Artifact name containing API reference markdown docs
        type: string
        required: false
    secrets:
      cloudflare-account-id:
        required: true
      cloudflare-api-token:
        required: true

env:
  DOCS_DIR: projects/ngx-meta/docs

permissions:
  deployments: write

jobs:
  docs:
    name: Docs build & deploy
    defaults:
      run:
        working-directory: '${{ env.DOCS_DIR }}'
    runs-on: ubuntu-latest
    if: |
      github.ref_name == 'main' ||
      (
        github.event_name == 'pull_request' &&
        contains(github.event.pull_request.labels.*.name, 'preview docs')
      )
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          ref: ${{ inputs.ref }}
      - name: Download API reference docs
        uses: actions/download-artifact@eaceaf801fd36c7dee90939fad912460b18a1ffe # v4
        with:
          name: ${{ inputs.api-docs-artifact-name }}
          path: 'projects/ngx-meta/docs/content/api'
      - name: Install poetry # pipx comes built-in in GitHub runner
        run: pipx install poetry
      - name: Setup Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c #v5
        with:
          python-version-file: '${{ env.DOCS_DIR }}/.python-version'
          cache: 'poetry'
          cache-dependency-path: '${{ env.DOCS_DIR }}/poetry.lock'
      - name: Setup pnpm
        uses: pnpm/action-setup@v3.0.0
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          cache: 'pnpm'
          cache-dependency-path: '${{ env.DOCS_DIR }}/pnpm-lock.yaml'
          node-version-file: '.node-version'
      - name: Install deps
        run: make install
      - name: Generate cache id for Mkdocs build
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - name: Cache Mkdocs build
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: '${{ env.DOCS_DIR }}/.cache'
          restore-keys: |
            mkdocs-material-
      - name: Build
        run: make build
      - name: Publish
        uses: cloudflare/pages-action@f0a1cd58cd66095dee69bfa18fa5efd1dde93bca # 1
        with:
          accountId: ${{ secrets.cloudflare-account-id }}
          apiToken: ${{ secrets.cloudflare-api-token }}
          # Somehow if this is not set, it deploys to production when building on a PR
          # https://github.com/cloudflare/pages-action/issues/97
          branch: ${{ github.head_ref || github.ref_name }}
          projectName: 'ngx-meta'
          directory: 'site'
          workingDirectory: '${{ env.DOCS_DIR }}'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
