name: Example apps
on:
  workflow_call:
    inputs:
      dist-artifact-name:
        required: true
        type: string
      example-app-artifact-name-prefix:
        required: false
        type: string
      ref:
        description: Git reference to checkout. Defaults to @actions/checkout default.
        type: string
        required: false
        default: ''

env:
  EXAMPLE_APPS_DIR: projects/ngx-meta/example-apps

jobs:
  example-app:
    name: Example app - Angular ${{ matrix.app_name }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        app_name: [v15, v16, v17]
    env:
      EXAMPLE_APP_DIR: projects/ngx-meta/example-apps/apps/${{ matrix.app_name }}
    defaults:
      run:
        working-directory: ${{ env.EXAMPLE_APPS_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        with:
          ref: ${{ inputs.ref }}
      - name: Download distribution files
        uses: actions/download-artifact@8caf195ad4b1dee92908e23f56eeb0696f1dd42d # v4
        with:
          name: ${{ inputs.dist-artifact-name }}
          path: projects/ngx-meta/dist
      - name: Setup pnpm
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          # Can't cache here, given some cache-dependency-paths do not exist yet
          # Hence can't be used to create a proper cache key
          # https://github.com/actions/setup-node/blob/v4.0.2/src/cache-restore.ts#L30-L42
          node-version-file: .node-version # TODO: may vary depending on Angular version
        # ðŸ‘‡ For caching, see below
        # - PNPM store: https://github.com/pnpm/action-setup/tree/v3.0.0?tab=readme-ov-file#use-cache-to-reduce-installation-time
        # - Angular CLI version: from versions file
      - name: Get caching key info
        run: |
          pnpm_store_path="$(pnpm store path --silent)"
          angular_cli_version="$(jq -r \
            '.devDependencies.${{ matrix.app_name }}' \
            'src/angular-cli-versions.json' |
            sed 's|npm:@angular/cli@||g'
          )"
          week_of_year="$(date --utc '+%V')"
          [ -z "$pnpm_store_path" ] && echo "pnpm store path cache key part missing" && exit 1
          [ -z "$angular_cli_version" ] && echo "Angular CLI version cache part missing" && exit 1
          [ -z "$week_of_year" ] && echo "Week of year cache part missing" && exit 1
          echo "pnpm_store_path=${pnpm_store_path}" >> $GITHUB_ENV
          echo "angular_cli_version=${angular_cli_version}" >> $GITHUB_ENV
          echo "week_of_year=${week_of_year}" >> $GITHUB_ENV
      - name: Cache dependencies and Angular CLI/app resolution
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        env:
          cache-name: ngx-meta-example-apps
          example_apps_lockfile_hash: ${{ hashFiles(format('{0}/pnpm-lock.yaml', env.EXAMPLE_APPS_DIR)) }}
        with:
          # To cache (line by line):
          # - pnpm global store
          # - Angular CLI dependency resolution (lockfile)
          # - Angular app dependency resolution (lockfile)
          path: |
            ${{ env.pnpm_store_path }}
            ${{ runner.temp }}/pnpm-lock.yaml
            ${{ env.EXAMPLE_APP_DIR }}/pnpm-lock.yaml
          # Key is designed to be invalidated if:
          # - Example apps infra dependencies change
          # - Angular CLI version is updated
          # - Week of year (UTC) changes
          # Last one is because we can't know before generating the Angular app
          # which patch version of Angular will be installed.
          # Angular CLI creates an app with same minor version:
          # https://github.com/angular/angular-cli/blob/17.3.4/packages/schematics/angular/utility/latest-versions.ts#L20-L21
          # So patch is up to dependency resolution step
          # By invalidating cache each week, if a patch release appears it
          # will be taken into account in max 1 week time
          # Patch releases shouldn't break anything anyway
          key: ${{ env.cache-name }}-${{ env.example_apps_lockfile_hash }}-${{ env.angular_cli_version }}-${{ env.week_of_year }}
      - name: Install example apps infra dependencies
        run: pnpm install --frozen-lockfile
      - name: Compile example apps scripts
        run: pnpm run build
      - name: Create example app
        run: >
          pnpm run create-example-app ${{ matrix.app_name }}
          --tmp-dir=${{ runner.temp }}
      - name: Build example app
        run: pnpm ci:build # includes SSR and source maps
        working-directory: ${{ env.EXAMPLE_APP_DIR }}
        # ðŸ‘‡ We can't do just `pnpm prune --prod` or `pnpm i --prod`
        #    GitHub Actions `actions/upload-artifact` doesn't like symlinks
        #    Original error in CI:
        #    ```
        #    With the provided path, there will be 130112 files uploaded
        #    Error: EMFILE: too many open files, open '/home/runner/work/ngx...
        #    ```
        #    See https://github.com/actions/upload-artifact/issues/418
        #    So we need to perform an installation with hoisted node linker
        #    https://pnpm.io/npmrc#node-linker
        #    After that, neither of previous commands work :(
        #    Neither does `pnpm deploy --prod`. So easiest is remove and reinstall
      - name: Remove development dependencies
        run: |
          rm -rf node_modules/
          echo "node-linker=hoisted" > .npmrc
          pnpm install --prod --frozen-lockfile
        working-directory: ${{ env.EXAMPLE_APP_DIR }}
      - name: Upload example app
        if: ${{ inputs.example-app-artifact-name-prefix != '' }}
        uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4
        with:
          name: ${{ inputs.example-app-artifact-name-prefix }}${{ matrix.app_name }}
          path: |
            ${{ env.EXAMPLE_APP_DIR }}/node_modules/
            !${{ env.EXAMPLE_APP_DIR }}/node_modules/.bin
            !${{ env.EXAMPLE_APP_DIR }}/node_modules/.pnpm
            !${{ env.EXAMPLE_APP_DIR }}/node_modules/*.yaml
            ${{ env.EXAMPLE_APP_DIR }}/dist
            ${{ env.EXAMPLE_APP_DIR }}/package.json
          retention-days: 5
